.car-type-switch {
    /* --_switch-bg-clr: theme(colors.green.300); Background color */
    --_switch-padding: clamp(2px, 1vw, 8px); /* Responsive padding */
    --_slider-bg-clr: theme(colors.green.300); /* Unchecked slider color */
    --_slider-bg-clr-on: theme(colors.zinc); /* Checked slider color */
    --_slider-txt-clr: #ffffff;
    --_label-padding: clamp(0.5rem, 2vw, 1rem) clamp(1rem, 3vw, 2rem); /* Responsive padding */
    --_switch-easing: cubic-bezier(0.47, 1.64, 0.41, 0.8);
    --_text-color-checked: #ffffff; /* Text color when checked */
    --_text-color-unchecked: #000000; /* Text color when unchecked */
    --_text-size: clamp(0.75rem, 2vw, 1rem); /* Responsive text size */
    color: black;
    width: fit-content;
    display: flex;
    justify-content: center;
    position: relative;
    /* border-radius: 9999px; */
    cursor: pointer;
    display: grid;
    grid-template-columns: repeat(2, minmax(0, 1fr));
    isolation: isolate;
  }
  
  .car-type-switch input[type="checkbox"] {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  
  .car-type-switch > span {
    display: grid;
    place-content: center;
    transition: opacity 300ms ease-in-out 150ms, color 300ms ease-in-out, font-size 300ms ease-in-out;
    padding: var(--_label-padding);
    color: var(--_text-color-unchecked); /* Default text color */
    font-size: var(--_text-size); /* Responsive text size */
  }
  
  .car-type-switch::before,
  .car-type-switch::after {
    content: "";
    position: absolute;
    border-radius: inherit;
    transition: inset 150ms ease-in-out;
  }
  
  /* switch slider */
  .car-type-switch::before {
    background-color: var(--_slider-bg-clr);
    inset: var(--_switch-padding) 50% var(--_switch-padding) var(--_switch-padding);
    transition: inset 500ms var(--_switch-easing), background-color 500ms ease-in-out;
    z-index: -1;
    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.3), 0 1px rgba(255, 255, 255, 0.3);
  }
  
  /* switch bg color */
  .car-type-switch::after {
    background-color: var(--_switch-bg-clr);
    inset: 0;
    z-index: -2;
  }
  
  /* switch hover & focus */
  .car-type-switch:focus-within::after {
    inset: -0.25rem;
  }
  
  .car-type-switch:has(input:checked):hover > span:first-of-type,
  .car-type-switch:has(input:not(:checked)):hover > span:last-of-type {
    opacity: 1;
    transition-delay: 0ms;
    transition-duration: 100ms;
  }
  
  /* switch hover */
  .car-type-switch:has(input:checked):hover::before {
    inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding) 45%;
  }
  
  .car-type-switch:has(input:not(:checked)):hover::before {
    inset: var(--_switch-padding) 45% var(--_switch-padding) var(--_switch-padding);
  }
  
  /* checked - move slider to right */
  .car-type-switch:has(input:checked)::before {
    background-color: var(--_slider-bg-clr-on);
    inset: var(--_switch-padding) var(--_switch-padding) var(--_switch-padding) 50%;
  }
  
  /* checked - set opacity */
  .car-type-switch > span:last-of-type,
  .car-type-switch > input:checked + span:first-of-type {
    opacity: 0.75;
  }
  
  /* Change text color when checked */
  .car-type-switch > input:checked ~ span {
    color: var(--_text-color-checked);
  }
  
  .car-type-switch > input:checked ~ span:first-of-type {
    color: var(--_text-color-unchecked);
  }
  
  /* Responsive adjustments */
  @media (max-width: 640px) {
    .car-type-switch {
      --_label-padding: clamp(0.25rem, 1vw, 0.5rem) clamp(0.5rem, 2vw, 1rem);
      --_text-size: clamp(0.8rem, 2vw, 0.75rem); /* Adjusted text size */
    }
  }
  